==2045== Memcheck, a memory error detector
==2045== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2045== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2045== Command: ./mytest
==2045== 
==2045== Invalid read of size 8
==2045==    at 0x401234: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:100)
==2045==    by 0x401128: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==2045==    by 0x400D46: main (push_back.cpp:21)
==2045==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==2045==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045==    by 0x40122F: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:99)
==2045==    by 0x401128: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==2045==    by 0x400D46: main (push_back.cpp:21)
==2045==  Block was alloc'd at
==2045==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045==    by 0x400E5E: ft::list<int, std::allocator<int> >::push_back(int const&) (listModifiers.hpp:7)
==2045==    by 0x400B6A: main (push_back.cpp:11)
==2045== 
==2045== 
==2045== HEAP SUMMARY:
==2045==     in use at exit: 0 bytes in 0 blocks
==2045==   total heap usage: 12 allocs, 12 frees, 81,136 bytes allocated
==2045== 
==2045== All heap blocks were freed -- no leaks are possible
==2045== 
==2045== For counts of detected and suppressed errors, rerun with: -v
==2045== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 0 from 0)
