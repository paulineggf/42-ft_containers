==30722== Memcheck, a memory error detector
==30722== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30722== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==30722== Command: ./mytest
==30722== 
==30722== Invalid read of size 8
==30722==    at 0x4010F4: ft::list<int, ft::allocator<int> >::clear() (listModifiers.hpp:100)
==30722==    by 0x401028: ft::list<int, ft::allocator<int> >::~list() (listInit.hpp:41)
==30722==    by 0x400C29: main (resize.cpp:24)
==30722==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==30722==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30722==    by 0x4010EF: ft::list<int, ft::allocator<int> >::clear() (listModifiers.hpp:99)
==30722==    by 0x401028: ft::list<int, ft::allocator<int> >::~list() (listInit.hpp:41)
==30722==    by 0x400C29: main (resize.cpp:24)
==30722==  Block was alloc'd at
==30722==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==30722==    by 0x400D1E: ft::list<int, ft::allocator<int> >::push_back(int const&) (listModifiers.hpp:7)
==30722==    by 0x400A4A: main (resize.cpp:11)
==30722== 
==30722== 
==30722== HEAP SUMMARY:
==30722==     in use at exit: 0 bytes in 0 blocks
==30722==   total heap usage: 18 allocs, 18 frees, 81,280 bytes allocated
==30722== 
==30722== All heap blocks were freed -- no leaks are possible
==30722== 
==30722== For counts of detected and suppressed errors, rerun with: -v
==30722== ERROR SUMMARY: 12 errors from 1 contexts (suppressed: 0 from 0)
