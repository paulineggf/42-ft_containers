==2469== Memcheck, a memory error detector
==2469== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2469== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2469== Command: ./mytest
==2469== 
==2469== Invalid read of size 8
==2469==    at 0x401054: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:100)
==2469==    by 0x400EE8: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==2469==    by 0x400BE5: main (push_front.cpp:18)
==2469==  Address 0x5b7ddb0 is 16 bytes inside a block of size 24 free'd
==2469==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2469==    by 0x40104F: ft::list<int, std::allocator<int> >::clear() (listModifiers.hpp:99)
==2469==    by 0x400EE8: ft::list<int, std::allocator<int> >::~list() (listInit.hpp:41)
==2469==    by 0x400BE5: main (push_front.cpp:18)
==2469==  Block was alloc'd at
==2469==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2469==    by 0x400D03: ft::list<int, std::allocator<int> >::push_front(int const&) (listModifiers.hpp:21)
==2469==    by 0x400A63: main (push_front.cpp:10)
==2469== 
==2469== 
==2469== HEAP SUMMARY:
==2469==     in use at exit: 0 bytes in 0 blocks
==2469==   total heap usage: 6 allocs, 6 frees, 80,992 bytes allocated
==2469== 
==2469== All heap blocks were freed -- no leaks are possible
==2469== 
==2469== For counts of detected and suppressed errors, rerun with: -v
==2469== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 0 from 0)
