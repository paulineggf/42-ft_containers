==20314== Memcheck, a memory error detector
==20314== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20314== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20314== Command: ./mytest
==20314== 
==20314== Invalid read of size 4
==20314==    at 0x402704: ft::pair<char const, int>::operator=(ft::pair<char const, int> const&) (map.hpp:20)
==20314==    by 0x4028A2: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::erase(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator) (vectorModifiers.hpp:53)
==20314==    by 0x401578: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::erase(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator) (mapModifiers.hpp:6)
==20314==    by 0x400EA6: main (empty.cpp:17)
==20314==  Address 0x5b7dd3c is 4 bytes after a block of size 24 alloc'd
==20314==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20314==    by 0x402756: __gnu_cxx::new_allocator<ft::pair<char const, int> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==20314==    by 0x402329: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::reserve(unsigned long) (vectorCapacity.hpp:50)
==20314==    by 0x401B85: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::insert(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator, ft::pair<char const, int> const&) (vectorModifiers.hpp:134)
==20314==    by 0x401394: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (mapAcces.hpp:14)
==20314==    by 0x400D5B: main (empty.cpp:12)
==20314== 
==20314== 
==20314== HEAP SUMMARY:
==20314==     in use at exit: 0 bytes in 0 blocks
==20314==   total heap usage: 5 allocs, 5 frees, 80,944 bytes allocated
==20314== 
==20314== All heap blocks were freed -- no leaks are possible
==20314== 
==20314== For counts of detected and suppressed errors, rerun with: -v
==20314== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
