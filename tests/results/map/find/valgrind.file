==20367== Memcheck, a memory error detector
==20367== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20367== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20367== Command: ./mytest
==20367== 
==20367== Invalid read of size 4
==20367==    at 0x402AC4: ft::pair<char const, int>::operator=(ft::pair<char const, int> const&) (map.hpp:20)
==20367==    by 0x402C32: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::erase(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator) (vectorModifiers.hpp:53)
==20367==    by 0x4019C8: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::erase(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator) (mapModifiers.hpp:6)
==20367==    by 0x400E5F: main (find.cpp:18)
==20367==  Address 0x5b7dda4 is 4 bytes after a block of size 32 alloc'd
==20367==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==20367==    by 0x402B16: __gnu_cxx::new_allocator<ft::pair<char const, int> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==20367==    by 0x402719: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::reserve(unsigned long) (vectorCapacity.hpp:50)
==20367==    by 0x401FC5: ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::insert(ft::vector<ft::pair<char const, int>, std::allocator<ft::pair<char const, int> > >::iterator, ft::pair<char const, int> const&) (vectorModifiers.hpp:134)
==20367==    by 0x401634: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (mapAcces.hpp:14)
==20367==    by 0x400D93: main (find.cpp:14)
==20367== 
==20367== 
==20367== HEAP SUMMARY:
==20367==     in use at exit: 0 bytes in 0 blocks
==20367==   total heap usage: 6 allocs, 6 frees, 80,976 bytes allocated
==20367== 
==20367== All heap blocks were freed -- no leaks are possible
==20367== 
==20367== For counts of detected and suppressed errors, rerun with: -v
==20367== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
