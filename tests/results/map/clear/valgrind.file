==31379== Memcheck, a memory error detector
==31379== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==31379== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==31379== Command: ./mytest
==31379== 
==31379== Invalid read of size 8
==31379==    at 0x401664: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:100)
==31379==    by 0x4014A8: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::clear() (mapModifiers.hpp:82)
==31379==    by 0x400C75: main (clear.cpp:18)
==31379==  Address 0x5b7dc90 is 16 bytes inside a block of size 24 free'd
==31379==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31379==    by 0x40165F: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:99)
==31379==    by 0x4014A8: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::clear() (mapModifiers.hpp:82)
==31379==    by 0x400C75: main (clear.cpp:18)
==31379==  Block was alloc'd at
==31379==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31379==    by 0x401B0E: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::push_back(ft::pair<char, int> const&) (listModifiers.hpp:7)
==31379==    by 0x4018F0: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::insert(ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::iterator, ft::pair<char, int> const&) (listModifiers.hpp:113)
==31379==    by 0x401292: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::operator[](char const&) (mapAcces.hpp:14)
==31379==    by 0x400A41: main (clear.cpp:10)
==31379== 
==31379== Invalid read of size 8
==31379==    at 0x401664: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:100)
==31379==    by 0x4015A8: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==31379==    by 0x4014D2: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::~map() (map.hpp:128)
==31379==    by 0x400E78: main (clear.cpp:27)
==31379==  Address 0x5b7fdf0 is 16 bytes inside a block of size 24 free'd
==31379==    at 0x4C3123B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31379==    by 0x40165F: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::clear() (listModifiers.hpp:99)
==31379==    by 0x4015A8: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::~list() (listInit.hpp:41)
==31379==    by 0x4014D2: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::~map() (map.hpp:128)
==31379==    by 0x400E78: main (clear.cpp:27)
==31379==  Block was alloc'd at
==31379==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31379==    by 0x401B0E: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::push_back(ft::pair<char, int> const&) (listModifiers.hpp:7)
==31379==    by 0x4018F0: ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::insert(ft::list<ft::pair<char, int>, ft::allocator<ft::pair<char, int> > >::iterator, ft::pair<char, int> const&) (listModifiers.hpp:113)
==31379==    by 0x401292: ft::map<char, int, ft::less<char>, ft::allocator<ft::pair<char, int> > >::operator[](char const&) (mapAcces.hpp:14)
==31379==    by 0x400C8B: main (clear.cpp:19)
==31379== 
==31379== 
==31379== HEAP SUMMARY:
==31379==     in use at exit: 0 bytes in 0 blocks
==31379==   total heap usage: 7 allocs, 7 frees, 81,016 bytes allocated
==31379== 
==31379== All heap blocks were freed -- no leaks are possible
==31379== 
==31379== For counts of detected and suppressed errors, rerun with: -v
==31379== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0)
